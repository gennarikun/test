package com.internousdev.ecsite2.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.internousdev.ecsite2.dto.MyPageDTO;
import com.internousdev.ecsite2.util.DBConnector;

public class ItemInfoDAO {

	private DBConnector dbConnector=new DBConnector();
	private Connection connection=dbConnector.getConnection();
	
		public ArrayList<MyPageDTO> getMyPageUserInfo(String item_info_transaction,String login_user_transaction) throws SQLException{
			ArrayList<MyPageDTO> myPageDTO=new ArrayList<MyPageDTO>();
			
			String sql="SELECT ubit.id,iit.item_name,ubit.total_price,ubit.total_count,ubit.pay,ubit.insert_date FROM user_buy_item_transaction ubit LEFT JOIN item_info_transaction iit ON ubit.item_transaction_id=iit.id WHERE ubit.item_transaction_id=? AND ubit.user_master_id=? ORDER BY insert_date DESC";
			try{
				PreparedStatement preparedStatement=connection.prepareStatement(sql);
				preparedStatement.setString(1,item_info_transaction);
				preparedStatement.setString(2,login_user_transaction);
				
				ResultSet resultSet=preparedStatement.executeQuery();
				
				while(resultSet.next()){
					MyPageDTO dto=new MyPageDTO();
					dto.setItemName(resultSet.getString("item_name"));
					dto.setTotalPrice(resultSet.getString("total_price"));
					dto.setTotalCount(resultSet.getString("total_count"));
					dto.setInsert_date(resultSet.getString("insert_date"));
					myPageDTO.add(dto);
				}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			connection.close();
		}
		return myPageDTO;
		}
		public int buyItemHistoryDelete(String item_info_transaction,String login_user_transaction) throws SQLException{
			
			String sql="DELETE FROM user_buy_item_transaction WHERE item_info_transaction=? AND login_user_transaction=?";
			PreparedStatement preparedStatement;
			int result=0;
			try{
				preparedStatement=connection.prepareStatement(sql);
				preparedStatement.setString(1,item_info_transaction);
				preparedStatement.setString(2,login_user_transaction);
				result=preparedStatement.executeUpdate();
			}catch(SQLException e){
				e.printStackTrace();
			}finally{
				connection.close();
			}
			return result;
		}
}
